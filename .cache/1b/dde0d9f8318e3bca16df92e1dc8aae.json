{"id":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","dependencies":[{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\package.json","includedInParent":true,"mtime":1646854395460},{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\package.json","includedInParent":true,"mtime":1646854395237},{"name":"ethers","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\deploy\\pushCidToChain.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\ethers\\lib.esm\\index.js"},{"name":"../../lighthouse.config","loc":{"line":3,"column":33,"index":68},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\deploy\\pushCidToChain.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\lighthouse.config.js"},{"name":"../contractAbi/lighthouseAbi.js","loc":{"line":4,"column":34,"index":130},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\deploy\\pushCidToChain.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\contractAbi\\lighthouseAbi.js"}],"generated":{"js":"const ethers = require(\"ethers\");\n\nconst lighthouseConfig = require(\"../../lighthouse.config\");\nconst { lighthouseAbi } = require(\"../contractAbi/lighthouseAbi.js\");\n\n/*\n  This function is used to deploy a file to the Lighthouse server.\n  It takes the following parameters:\n  @param {string} signer - Signer to execute transaction.\n  @param {string} cid - CID to push on contract.\n  @param {string} name - Name of file to upload.\n  @param {string} size - Size of file to upload.\n  @param {string} cost - cost to be paid.\n  @param {string} network - Network on which transaction to execute.\n*/\n\nmodule.exports = async (signer, cid, name, size, cost, network) => {\n  try {\n    const contract = new ethers.Contract(\n      lighthouseConfig[network][\"lighthouse_contract_address\"],\n      lighthouseAbi,\n      signer\n    );\n\n    const txResponse = await contract.store(cid, \"\", name, size, {\n      value: ethers.utils.parseEther(cost),\n    });\n\n    const txReceipt = await txResponse.wait();\n    return txReceipt;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/lighthouse-web3/Lighthouse/deploy/pushCidToChain.js":"const ethers = require(\"ethers\");\n\nconst lighthouseConfig = require(\"../../lighthouse.config\");\nconst { lighthouseAbi } = require(\"../contractAbi/lighthouseAbi.js\");\n\n/*\n  This function is used to deploy a file to the Lighthouse server.\n  It takes the following parameters:\n  @param {string} signer - Signer to execute transaction.\n  @param {string} cid - CID to push on contract.\n  @param {string} name - Name of file to upload.\n  @param {string} size - Size of file to upload.\n  @param {string} cost - cost to be paid.\n  @param {string} network - Network on which transaction to execute.\n*/\n\nmodule.exports = async (signer, cid, name, size, cost, network) => {\n  try {\n    const contract = new ethers.Contract(\n      lighthouseConfig[network][\"lighthouse_contract_address\"],\n      lighthouseAbi,\n      signer\n    );\n\n    const txResponse = await contract.store(cid, \"\", name, size, {\n      value: ethers.utils.parseEther(cost),\n    });\n\n    const txReceipt = await txResponse.wait();\n    return txReceipt;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n"},"lineCount":36}},"error":null,"hash":"57205dd2f933244154b50dc7fc374c60","cacheData":{"env":{}}}
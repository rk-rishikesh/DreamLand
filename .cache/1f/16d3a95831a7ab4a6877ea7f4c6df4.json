{"id":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","dependencies":[{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\package.json","includedInParent":true,"mtime":1646854395460},{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\package.json","includedInParent":true,"mtime":1646854395237},{"name":"ipfs-unixfs-importer","loc":{"line":1,"column":29,"index":29},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\getHash\\index.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\ipfs-unixfs-importer\\cjs\\src\\index.js"}],"generated":{"js":"const { importer } = require(\"ipfs-unixfs-importer\");\n\nconst block = {\n  get: async (cid) => {\n    throw new Error(`unexpected block API get for ${cid}`);\n  },\n  put: async () => {\n    throw new Error(\"unexpected block API put\");\n  },\n};\n\nexports.of = async (content, options) => {\n  options = options || {};\n  options.onlyHash = true;\n\n  if (typeof content === \"string\") {\n    content = new TextEncoder().encode(content);\n  }\n\n  let lastCid;\n  for await (const { cid } of importer([{ content }], block, options)) {\n    lastCid = cid;\n  }\n\n  return `${lastCid}`;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getHash/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/lighthouse-web3/Lighthouse/getHash/index.js":"const { importer } = require(\"ipfs-unixfs-importer\");\n\nconst block = {\n  get: async (cid) => {\n    throw new Error(`unexpected block API get for ${cid}`);\n  },\n  put: async () => {\n    throw new Error(\"unexpected block API put\");\n  },\n};\n\nexports.of = async (content, options) => {\n  options = options || {};\n  options.onlyHash = true;\n\n  if (typeof content === \"string\") {\n    content = new TextEncoder().encode(content);\n  }\n\n  let lastCid;\n  for await (const { cid } of importer([{ content }], block, options)) {\n    lastCid = cid;\n  }\n\n  return `${lastCid}`;\n};\n"},"lineCount":27}},"error":null,"hash":"ea3d4124e70f7f48a3ca4bbe5e6fcae1","cacheData":{"env":{}}}
{"id":"node_modules/rabin-wasm/src/rabin.js","dependencies":[{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\package.json","includedInParent":true,"mtime":1646854395460},{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\rabin-wasm\\package.json","includedInParent":true,"mtime":1646854393855}],"generated":{"js":"/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rabin-wasm/src/rabin.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/rabin-wasm/src/rabin.js":"/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin"},"lineCount":57}},"error":null,"hash":"646b594d0426bfeb322e3ca188958918","cacheData":{"env":{}}}
{"id":"node_modules/sparse-array/index.js","dependencies":[{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\package.json","includedInParent":true,"mtime":1646854395460},{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\sparse-array\\package.json","includedInParent":true,"mtime":1646854393855}],"generated":{"js":"'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sparse-array/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sparse-array/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}}],"sources":{"node_modules/sparse-array/index.js":"'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}"},"lineCount":250}},"error":null,"hash":"2acd1a27c82207cfdba9197ef7fa4511","cacheData":{"env":{}}}
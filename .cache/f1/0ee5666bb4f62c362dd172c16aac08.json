{"id":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","dependencies":[{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\package.json","includedInParent":true,"mtime":1646854395460},{"name":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\package.json","includedInParent":true,"mtime":1646854395237},{"name":"ethers","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\getBalance\\index.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\ethers\\lib.esm\\index.js"},{"name":"../../lighthouse.config","loc":{"line":2,"column":33,"index":67},"parent":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\Lighthouse\\getBalance\\index.js","resolved":"C:\\Users\\rishi\\Downloads\\top-down-2d-game-camera\\top-down-2d-game-camera\\dist\\node_modules\\lighthouse-web3\\lighthouse.config.js"}],"generated":{"js":"const ethers = require(\"ethers\");\nconst lighthouseConfig = require(\"../../lighthouse.config\");\n\nmodule.exports = async (publicKey, network) => {\n  try {\n    const provider = new ethers.providers.JsonRpcProvider(\n      lighthouseConfig[network][\"rpc\"]\n    );\n    const balance = await provider.getBalance(publicKey);\n    return ethers.utils.formatEther(balance);\n  } catch {\n    return null;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"node_modules/lighthouse-web3/Lighthouse/getBalance/index.js":"const ethers = require(\"ethers\");\nconst lighthouseConfig = require(\"../../lighthouse.config\");\n\nmodule.exports = async (publicKey, network) => {\n  try {\n    const provider = new ethers.providers.JsonRpcProvider(\n      lighthouseConfig[network][\"rpc\"]\n    );\n    const balance = await provider.getBalance(publicKey);\n    return ethers.utils.formatEther(balance);\n  } catch {\n    return null;\n  }\n};\n"},"lineCount":15}},"error":null,"hash":"0310b94d1d845050fa7de8d26c69460d","cacheData":{"env":{}}}